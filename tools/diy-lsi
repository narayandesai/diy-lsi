#!/usr/bin/env python

import argparse, json, os, sys
import diylsi.inventory

def do_inventory():
    parser = argparse.ArgumentParser(prog='diy-lsi inventory', 
                                     description="LSI disk inventory")
    parser.add_argument('--all', help='scan disks and filesystems', 
                        dest='alltargets', action='store_true')
    parser.add_argument('--fs', help='scan filesystems', 
                        dest='fs', action='store_true')
    parser.add_argument('--disks', help='scan disks',
                        dest='disks', action='store_true')
    parser.add_argument('--diff', help='diff state with stored config',
                        dest='diff', action='store_true')
    parser.add_argument('--data', help='path to data',
                        dest='datadir')

    config = parser.parse_args(sys.argv[2:])

    if config.disks or config.alltargets:
        d = diylsi.inventory.parse_sas2ircu()
        a = diylsi.inventory.parse_mdb_mpt()
        sas_data = diylsi.inventory.join_dict(d, a, 'guid')
        c = diylsi.inventory.parse_iostat()
        disks = diylsi.inventory.join_dict(c, sas_data, 'serial')
   
        try:
            open('/etc/diy-lsi/hardware.js', 'w').write(json.dumps(disks, indent=2))
        except:
            print "Failed to write file /etc/diy-lsi/hardware.js"
            sys.exit(1)

    if config.fs or config.alltargets:
        pools = diylsi.inventory.parse_zpool()
        try:
            open('/etc/diy-lsi/pools.js', 'w').write(json.dumps(pools, indent=2))
        except:
            print "Failed to write file /etc/diy-lsi/pools.js"
            sys.exit(1)

def do_resilver():
    parser = argparse.ArgumentParser(prog='diy-lsi resilver', 
                                     description="ZFS Resilver tuning")
    parser.add_argument('--fast', help='set high resilver priority', 
                        dest='fast', action='store_true')
    parser.add_argument('--regular', help='set regular resilver priority', 
                        dest='regular', action='store_true')

    config = parser.parse_args(sys.argv[2:])
    if config['fast']:
        os.system('echo zfs_resilver_delay/W0|mdb -kw')
        os.system('echo zfs_resilver_min_time_ms/W0t3000|mdb -kw')
    elif config['regular']:
        os.system('echo zfs_resilver_delay/W2|mdb -kw')
        os.system('echo zfs_resilver_min_time_ms/W0t300|mdb -kw')
    else:
        os.system("echo zfs_resilver_delay/D|mdb -k")
        os.system("echo zfs_resilver_min_time_ms/D|mdb -k")

if __name__ == '__main__':
    if sys.argv[1] == 'inventory':
        do_inventory()
    elif sys.argv[1] == 'resilver':
        do_resilver()
    else:
        print "Unknown mode %s" % sys.argv[1]
        sys.exit(1)
